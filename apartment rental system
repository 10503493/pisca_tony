from flask import Flask,render_template,request
from flask_mysqldb import MySQL
from flask import jsonify

app = Flask(__name__)
app.config['MYSQL_USER'] = 'root'
app.config['MYSQL_PASSWORD'] = 'root'
app.config['MYSQL_HOST'] = 'localhost'
app.config['MYSQL_DB'] = 'appartments'


mysql = MySQL(app)

@app.route('/', methods=['GET', 'POST'])
def index():
    return  render_template('login-page.html')




@app.route('/login', methods=['POST'])
def login():
    usr = request.form.get('username')
    passw = request.form.get('password')
    cur = mysql.connection.cursor()
    cur.execute("select * from user_details where username=%s and password=%s",[usr.strip(),passw.strip()])
    data = cur.fetchall()
    cur.close()
    if len(data) > 0:
     return render_template('list-page.html')
    else:
     return 'no '+usr

@app.route('/get-all', methods=['get'])
def getalldetails():
    cur = mysql.connection.cursor()
    cur.execute("select apd.apar_id,apd.name,apd.image_url,apd.image_t_url,apd.bedrooms,apd.floor_area,apd.thermal_isolation,apd.price,apd.details,case when CURDATE() <= bk.todate then 'BOOKED' else 'BOOK'  end from apartment_details apd left join  booking bk on apd.apar_id = bk.apar_id"); 
    data = cur.fetchall()
    cur.close()
    return jsonify(data)

@app.route('/get-thermal-unique', methods=['get'])
def thermal():
    cur = mysql.connection.cursor()
    cur.execute("select distinct thermal_isolation from apartment_details"); 
    data = cur.fetchall()
    cur.close()
    return jsonify(data)

@app.route('/get-bedroom-unique', methods=['get'])
def bedroom():
    cur = mysql.connection.cursor()
    cur.execute("select distinct bedrooms  from apartment_details"); 
    data = cur.fetchall()
    cur.close()
    return jsonify(data)

@app.route('/get-area-unique', methods=['get'])
def area():
    cur = mysql.connection.cursor()
    cur.execute("select distinct floor_area  from apartment_details"); 
    data = cur.fetchall()
    cur.close()
    return jsonify(data)

@app.route('/filter', methods=['get'])
def area():
    bedr=  request.args.get('bedroom')
    ther = request.args.get('thermal')
    area = request.args.get('area')
    filterstring = ""
    
    if area != "any":
        area = float(request.args.get('area'))
        filterstring+="floor_area ="+area+" and"
    else:
         filterstring+="floor_area is not null and"

    if ther != "any":
        ther = bool(request.args.get('thermal'))
        filterstring +="thermal_isolation ="+ther+" and"
    else:
        filterstring +="thermal_isolation is not null"

    
    if bedr != "any":
        bedr = int(request.args.get('bed'))
        filterstring +="bedrooms ="+bedr
    else:
        filterstring +="thermal_isolation is not null"

        
    cur = mysql.connection.cursor()
    cur.execute("select apd.apar_id,apd.name,apd.image_url,apd.image_t_url,apd.bedrooms,apd.floor_area,apd.thermal_isolation,apd.price,apd.details,case when CURDATE() <= bk.todate then 'BOOKED' else 'BOOK'  end from apartment_details apd left join  booking bk on apd.apar_id = bk.apar_id where"+filterstring); 
    data = cur.fetchall()
    cur.close()
    return jsonify(data)


if __name__ == '__main__':
    app.run()
